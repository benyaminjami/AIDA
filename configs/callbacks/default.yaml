defaults:
  - model_checkpoint
  - early_stopping
  - model_summary
  - rich_progress_bar
  - _self_

model_summary:
  max_depth: -1

model_checkpoint:
  monitor: ${train.monitor} # name of the logged metric which determines when model is improving
  mode: ${train.mode} # "max" means higher metric value is better, can be also "min"
  save_top_k: 1 # save k best models (determined by above metric)
  save_last: True # additionally always save model from last epoch
  verbose: True
  dirpath: ${paths.ckpt_dir}
  filename: "step_{global_step}-${train.monitor}_{${train.monitor}:.2f}"
  auto_insert_metric_name: False
  # every_n_train_steps: 10

early_stopping:
  _target_: pytorch_lightning.callbacks.EarlyStopping
  monitor: ${train.monitor} # name of the logged metric which determines when model is improving
  mode: ${train.mode} # "max" means higher metric value is better, can be also "min"
  patience: ${train.patience} # how many validation epochs of not improving until training stops
  min_delta: 0 # minimum change in the monitored metric needed to qualify as an improvement
  check_on_train_epoch_end: false

CheckpointEveryNSteps:
  _target_: src.utils.callbacks.CheckpointEveryNSteps
  save_step_frequency: 60

# val_every_Nsteps:
#   _target_: src.utils.callbacks.ValEveryNSteps
#   every_n_step: 50

lr_monitor:
  _target_: pytorch_lightning.callbacks.LearningRateMonitor
  logging_interval: 'step'

rich_progress_bar:
  _target_: src.utils.callbacks.BetterRichProgressBar
  leave: true
